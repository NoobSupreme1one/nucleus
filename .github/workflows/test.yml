name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma client
        run: npm run db:generate
      
      - name: Run type checking
        run: npm run check
      
      - name: Run unit tests (frontend)
        run: npm run test:unit
      
      - name: Upload frontend coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  integration-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nucleus_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup test environment
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nucleus_test
          NODE_ENV: test
        run: |
          npm run db:generate
          npx prisma db push
      
      - name: Run integration tests (backend)
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nucleus_test
          NODE_ENV: test
        run: npm run test:integration
      
      - name: Upload backend coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: backend
          name: backend-coverage

  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nucleus_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Setup test environment
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nucleus_test
          NODE_ENV: test
        run: |
          npm run db:generate
          npx prisma db push
      
      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nucleus_test
          NODE_ENV: test
        run: npm run test:e2e
      
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check formatting with Prettier
        run: npx prettier --check .
      
      - name: Run ESLint
        run: npx eslint . --ext .ts,.tsx --max-warnings 0